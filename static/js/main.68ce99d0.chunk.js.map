{"version":3,"sources":["components/Clock.js","components/Todo.js","actions/index.js","actions/types.js","components/Weather.js","components/Name.js","components/Quotes.js","App.js","serviceWorker.js","reducers/itemReducer.js","reducers/index.js","index.js"],"names":["Clock","_ref","name","_useState","useState","Date","_useState2","Object","slicedToArray","time","setTime","useEffect","react_default","a","createElement","className","thatTime","toLocaleTimeString","navigator","language","hour","minute","replace","id","style","fontFamily","fontSize","fontWeight","currentTime","currentHour","getHours","greeting","Todo","state","text","onChange","e","_this","setState","target","value","onSubmit","preventDefault","props","todoItem","this","localStorage","getItem","type","removeItem","_this2","todo","addItem","onClick","removeTodo","taskInput","renderContent","Component","connect","item","setItem","payload","icon","temp","city","Weather","geolocation","getCurrentPosition","fetchWeather","alert","nextProps","nextState","weather","main","src","concat","width","height","Math","round","coords","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","request","wrap","_context","prev","next","latitude","longitude","axios","get","sent","abrupt","data","stop","_x","apply","arguments","Name","onNameSubmit","saveName","onNameChange","placeholder","Fragment","showName","Quotes","quote","setquote","then","res","body","App","image","nameEntered","components_Clock","components_Todo","components_Name","console","log","components_Weather","renderPage","components_Quotes","Boolean","window","location","hostname","match","initialState","combineReducers","length","undefined","action","objectSpread","assign","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","composeEnhancers","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","es","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68ce99d0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Clock = ({name}) => {\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const tick = () => {\r\n    setTime(new Date());\r\n  };\r\n\r\n  useEffect(() => {\r\n    tick();\r\n  }, 500);\r\n\r\nfunction currentTime() {\r\n let thatTime = time.toLocaleTimeString(navigator.language, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\"\r\n  })\r\n  if(thatTime[0] == 0){\r\n    thatTime = thatTime.replace(/^0+/, '')\r\n  }\r\n    return (\r\n      <h1 id=\"currentTime\" style={{ fontFamily: \"Revalia\", fontSize: \"100px\", fontWeight: 'bold' }}>\r\n        {thatTime}\r\n      </h1>\r\n    );\r\n  };\r\n\r\n  const greeting = () => {\r\n    var currentHour = new Date().getHours();\r\n    if(1 <= currentHour && currentHour < 12){\r\n        return <div>Good morning, {name}</div>\r\n    } else if(13 <= currentHour && currentHour < 18) {\r\n        return <div> Good afternoon, {name}</div>\r\n    } return <div>Good evening, {name}</div>\r\n  }\r\n  return (\r\n    <div className=\"container text-center center text-white\">\r\n      {currentTime()}\r\n      <h4 style={{ fontFamily: \"Orbitron\", fontSize: \"50px\" }}>\r\n        {greeting()}\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { Component } from \"react\";\r\nimport { todoItem } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Todo extends Component {\r\n  state = { text: \"\" };\r\n\r\n  componentDidMount() {\r\n    this.props.todoItem(localStorage.getItem('todo'))\r\n  }\r\n  \r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.todoItem(this.state.text);\r\n    this.setState({\r\n      text: \"\"\r\n    });\r\n  };\r\n\r\n  taskInput() {\r\n    return (\r\n      <div className=\"input-field\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <h5 className=\"text-white\">Enter in your main hustle for today</h5>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={this.onChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  removeTodo() {\r\n    localStorage.removeItem(\"todo\");\r\n    this.props.todoItem(\"\");\r\n  }\r\n  todo() {\r\n    var todo = this.props.addItem || localStorage.getItem('todo')\r\n    return (\r\n      <div\r\n        className=\"text-white text-center todo-item\"\r\n        onClick={() => this.removeTodo()}\r\n      >\r\n      <h3>Today</h3>\r\n      <br/>\r\n        <h2 className='display-2 text-capitalize'>{todo}</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    var todo = localStorage.getItem(\"todo\");\r\n    if (todo) {\r\n      return this.todo();\r\n    } else {\r\n      return this.taskInput();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"container d-flex justify-content-center\">{this.renderContent()}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = ({ item }) => {\r\n  const { addItem } = item;\r\n  return { addItem };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { todoItem }\r\n)(Todo);\r\n","import { FETCH_WEATHER, STORE_ITEM, NAME } from './types';\r\nimport axios from 'axios'\r\n\r\nconst API_KEY = '54670d34f8d9089536b383f9a5a7769d';\r\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/weather?`\r\n\r\nexport const fetchWeather = ({coords}) => async dispatch =>{\r\n    const url = `${ROOT_URL}lat=${coords.latitude}&lon=${coords.longitude}&APPID=${API_KEY}`\r\n    const request = await axios.get(url)\r\n    return dispatch({ type: FETCH_WEATHER, payload: request.data})\r\n}\r\n\r\nexport const todoItem = item => (localStorage.setItem('todo', item), {\r\n  type: STORE_ITEM,\r\n  payload: item\r\n})\r\n\r\nexport const saveName = (name) => (localStorage.setItem('name', name), {\r\n  type: NAME,\r\n  payload: name\r\n});\r\n\r\n\r\n","export const FETCH_WEATHER = 'FETCH_WEATHER';\r\nexport const STORE_ITEM = 'STORE_ITEM';\r\nexport const NAME = 'NAME'","import React, { Component } from \"react\";\r\nimport { fetchWeather } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nlet icon = ''\r\nlet temp = 0;\r\nlet city = 'City'\r\nclass Weather extends Component {\r\n\r\ncomponentDidMount() {\r\n    if(navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(this.props.fetchWeather);\r\n    } else {\r\n      alert('browser not supported')\r\n    }\r\n}\r\ncomponentWillUpdate(nextProps, nextState) {\r\n  icon = nextProps.weather.weather[0].icon;\r\n  temp = nextProps.weather.main.temp;\r\n  temp = (temp - 273.15) * 9/5 + 32;\r\n  city = nextProps.weather.name\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className='weather row'>\r\n          <img className='col-8' src={`https://openweathermap.org/img/wn/${icon ? icon : '02d'}@2x.png`} style={{width: 50, height: 50}}/>   \r\n          <h4 className='col-4 text-white' style={{width: 10, height: 10}}>{Math.round(temp)}°</h4>\r\n          <h2 className='col-12 text-white text-center'>{city}</h2>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const {weather} = state.item\r\n  return {weather}\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchWeather})(Weather);\r\n","import React, { Component } from \"react\";\r\nimport { connect} from 'react-redux';\r\nimport {saveName} from '../actions';\r\n\r\nclass Name extends Component {\r\n  state = { name: \"\" };\r\n\r\n  onNameSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.saveName(this.state.name);\r\n    this.setState({\r\n      name: \"\"\r\n    });\r\n  };\r\n  onNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  showName() {\r\n    return (\r\n      <div className='input-field'>\r\n        <form onSubmit={this.onNameSubmit}>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.onNameChange}\r\n            placeholder=\"Enter your name...\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <>{this.showName()}</>;\r\n  }\r\n}\r\n\r\nexport default connect(null, {saveName})(Name)\r\n","import React,{useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Quotes = () => {\r\n    const [quote, setquote] = useState({})\r\n    useEffect(() => {\r\n        axios.get('https://favqs.com/api/qotd').then(data => data).then(res => setquote(res.data.quote));\r\n    }, [])\r\n    return (\r\n        <div  id='quotes' className=''>\r\n            <p className='text-light'>\"{quote.body}\"</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quotes\r\n","import React, { Component } from \"react\";\r\n\r\nimport Clock from \"./components/Clock\";\r\nimport Todo from \"./components/Todo\";\r\nimport Weather from \"./components/Weather\";\r\nimport Name from \"./components/Name\";\r\nimport Quotes from './components/Quotes';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  state={image: ''}\r\ncomponentDidMount() {\r\n  var currentHour = new Date().getHours();\r\n  if (1 <= currentHour && currentHour < 12) {\r\n    this.setState({image: \"https://source.unsplash.com/collection/539016/1600x900\"})\r\n  } else if (13 <= currentHour && currentHour < 18) {\r\n    this.setState({image: 'https://source.unsplash.com/collection/3477914/1600x900'});\r\n  } else this.setState({image: 'https://source.unsplash.com/collection/1658777/1600x900'});\r\n\r\n}\r\n\r\n  renderPage() {\r\n    let nameEntered = localStorage.getItem(\"name\");\r\n    if (nameEntered) {\r\n      return (\r\n        <>\r\n          <Clock name={nameEntered} />\r\n          <Todo />\r\n        </>\r\n      );\r\n    } else return <Name />;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.image)\r\n    return (\r\n      <div id=\"app\">\r\n        <img src={this.state.image} />\r\n        <Weather />\r\n        <div className=\"content\">\r\n          <div className=\"components\">{this.renderPage()}</div>\r\n          <Quotes />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ item }) => {\r\n  const { name, addItem } = item;\r\n  return { name, addItem };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { STORE_ITEM, NAME, FETCH_WEATHER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  addItem: \"\",\r\n  name: \"\",\r\n  weather: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case STORE_ITEM:\r\n      return { ...state, addItem: action.payload };\r\n    case NAME:\r\n      return { ...state, name: action.payload };\r\n    case FETCH_WEATHER:\r\n      return Object.assign({ ...state, weather: action.payload })\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers} from 'redux';\r\nimport itemReducer from './itemReducer';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport './main.scss';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(thunk))(\r\n  createStore\r\n);\r\nconst store = createStoreWithMiddleware(reducers) \r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>, \r\ndocument.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}